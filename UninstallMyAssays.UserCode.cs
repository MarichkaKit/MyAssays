///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;
using System.Diagnostics;
using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace MyAssays.Wizard.RanorexTests
{
    public partial class UninstallMyAssays
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        PopupWatcher _closingManagerInstancesWatcher;
        PopupWatcher _setupUnableTextWatcher;
        
        private void Init()
        {
        	_closingManagerInstancesWatcher = new PopupWatcher();
        	_closingManagerInstancesWatcher.Watch(@"/form[@title='MyAssays Desktop Setup']/?/?/radiobutton[@text~'^&Close\ the\ applications\ a']", CloseAllMyAssaysWindows);
        	_closingManagerInstancesWatcher.Start(); 
        	_setupUnableTextWatcher = new PopupWatcher();
        	_setupUnableTextWatcher.Watch(@"/form[@title='MyAssays Desktop Setup']/text[@windowtext='The setup was unable to automatically close all requested applications. Please ensure that the applications holding files in use are closed before continuing with the installation.']", CloseAllWindows);
        	_setupUnableTextWatcher.Start(); 
        }
        
        private static void CloseAllMyAssaysWindows(Ranorex.Core.RxPath myPath, Ranorex.Core.Element myElemen)  
		{ 
        	Report.Log(ReportLevel.Info, "Closing all MyAssays windows.");
        	Report.Screenshot();
        	
		    	if (repo.MyAssaysDesktopSetup.RadioButtonCloseTheApplicationsAndAtInfo.Exists())
		    	{
		    		Report.Log(ReportLevel.Info, "Found some files that need be deleted but are in use now.");		    		
//		        	Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Files in Use') on item 'MyAssaysDesktopSetup.FilesInUseText'.", repo.MyAssaysDesktopSetup.FilesInUseTextInfo);
//		            Validate.Attribute(repo.MyAssaysDesktopSetup.FilesInUseTextInfo, "Text", "Files in Use");
		            var button = repo.MyAssaysDesktopSetup.ButtonOK;
		            button.EnsureVisible();
		            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopSetup.ButtonOK' at 23;9.", repo.MyAssaysDesktopSetup.ButtonOKInfo);
		            button.Press();	
		    	}
		    	
		}
        
        private static void CloseAllWindows(Ranorex.Core.RxPath myPath, Ranorex.Core.Element myElemen)  
		{ 
        	Report.Log(ReportLevel.Info, "Closing all MyAssays windows.");
        	Report.Screenshot();
        	Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='The setup was unable to automatically close all requested applications. Please ensure that the applications holding files in use are closed before continuing with the installation.') on item 'MyAssaysDesktopSetup.SetupUnableText'.", repo.MyAssaysDesktopSetup.SetupUnableTextInfo);
            Validate.Attribute(repo.MyAssaysDesktopSetup.SetupUnableTextInfo, "Text", "The setup was unable to automatically close all requested applications. Please ensure that the applications holding files in use are closed before continuing with the installation.");

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopSetup.ButtonOK'.", repo.MyAssaysDesktopSetup.ButtonOKInfo);
            repo.MyAssaysDesktopSetup.ButtonOK.Press();		    	
		}
        
        public void Validate_FilesInUseText()
        {
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Files in Use') on item 'MyAssaysDesktopSetup.FilesInUseText'.", repo.MyAssaysDesktopSetup.FilesInUseTextInfo);
            Validate.Attribute(repo.MyAssaysDesktopSetup.FilesInUseTextInfo, "Text", "Files in Use");
           
        }
        
        public void SaveLogFiles()
        {
        	Report.Info("Saving log files before uninstallation.");
        	new SavingLogFilesHelper().CopyLogFilesToOutput();
        }

        public void Mouse_Click_ButtonNext()
        {
        	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopSetup.ButtonNext' at Center.", repo.MyAssaysDesktopSetup.ButtonNextInfo);
        	while (!repo.MyAssaysDesktopSetup.ButtonNext.Enabled)
            	repo.MyAssaysDesktopSetup.ButtonNext.Press();
        	repo.MyAssaysDesktopSetup.ButtonNext.Press();
        }

        public void CloseMyAssays()
        {
        	KillMyAssaysHelper.Start();        	
        }

        public void MergedUserCodeMethod()
        {
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='The setup was unable to automatically close all requested applications. Please ensure that the applications holding files in use are closed before continuing with the installation.') on item 'MyAssaysDesktopSetup.Text594'.", repo.MyAssaysDesktopSetup.SetupUnableTextInfo);
            Validate.Attribute(repo.MyAssaysDesktopSetup.SetupUnableTextInfo, "Text", "The setup was unable to automatically close all requested applications. Please ensure that the applications holding files in use are closed before continuing with the installation.");
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopSetup.ButtonOK' at 23;12.", repo.MyAssaysDesktopSetup.ButtonOKInfo);
            repo.MyAssaysDesktopSetup.ButtonOK.Click("23;12");
        }

        public void UninstallMyAssays_Run_Application()
        {
            Report.Log(ReportLevel.Info, "Application", "Run application '.\\en-us\\MyAssaysDesktopSetup.msi' with arguments '' in normal mode.");
            var file = StartAnalysisHelper.GetExecutingAssemblyPath() + "\\en-us\\MyAssaysDesktopSetup.msi";
            Report.Info(file);
            Host.Local.RunApplication(file, "", "", false);
        }

        public void Mouse_Click_ButtonOK()
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopSetup.ButtonOK' at 11;7.", repo.MyAssaysDesktopSetup.ButtonOKInfo);
            repo.MyAssaysDesktopSetup.ButtonOK.Click("11;7");
        }
    }
}