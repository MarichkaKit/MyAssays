///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssays.Wizard.RanorexTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateTemplateSection recording.
    /// </summary>
    [TestModule("a358e5a7-47fb-4050-a794-784d526f0631", ModuleType.Recording, 1)]
    public partial class ValidateTemplateSection : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssays_Wizard_RanorexTestsRepository repository.
        /// </summary>
        public static MyAssays_Wizard_RanorexTestsRepository repo = MyAssays_Wizard_RanorexTestsRepository.Instance;

        static ValidateTemplateSection instance = new ValidateTemplateSection();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTemplateSection()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTemplateSection Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            cleanHelper();
            Delay.Milliseconds(0);
            
            RunAnalysis("antibody-titers.assay-protocol");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.Calculate' at Center.", repo.ProtocolAnalysisDesktop.CalculateInfo, new RecordItemIndex(2));
            repo.ProtocolAnalysisDesktop.Calculate.Click();
            Delay.Milliseconds(200);
            
            waitCalculation();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.HomeRibbonTab' at Center.", repo.ResultsAnalysis.HomeRibbonTabInfo, new RecordItemIndex(4));
            repo.ResultsAnalysis.HomeRibbonTab.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            try {
                //Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Version 1') on item 'ResultsAnalysis.SelectVersion'.", repo.ResultsAnalysis.SelectVersionInfo, new RecordItemIndex(6));
                //Validate.Attribute(repo.ResultsAnalysis.SelectVersionInfo, "Text", "Version 1", Validate.DefaultMessage, false);
                //Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(7));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.ReportRibbonTab1' at Center.", repo.ResultsAnalysis.ReportRibbonTab1Info, new RecordItemIndex(8));
            repo.ResultsAnalysis.ReportRibbonTab1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            checkTemplateSection();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.NewTemplate' at Center.", repo.ResultsAnalysis.NewTemplateInfo, new RecordItemIndex(11));
            repo.ResultsAnalysis.NewTemplate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(12));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TemplateDocx'.", repo.TemplateDocx.SelfInfo, new RecordItemIndex(13));
            Validate.Exists(repo.TemplateDocx.SelfInfo);
            Delay.Milliseconds(100);
            
            KillApp("wordpad");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(15));
            Delay.Duration(3000, false);
            
            checkNewTemplateSaam();
            Delay.Milliseconds(0);
            
            checkSaamMessage();
            Delay.Milliseconds(0);
            
            setFocusRerults(repo.ResultsAnalysis.MeasurementsTab);
            Delay.Milliseconds(0);
            
            checkTemplateButtons();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.HomeRibbonTab' at Center.", repo.ResultsAnalysis.HomeRibbonTabInfo, new RecordItemIndex(20));
            repo.ResultsAnalysis.HomeRibbonTab.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(21));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.CalculateBttn' at Center.", repo.ResultsAnalysis.CalculateBttnInfo, new RecordItemIndex(22));
            repo.ResultsAnalysis.CalculateBttn.Click();
            Delay.Milliseconds(200);
            
            waitCalculation();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.HomeRibbonTab' at Center.", repo.ResultsAnalysis.HomeRibbonTabInfo, new RecordItemIndex(24));
            repo.ResultsAnalysis.HomeRibbonTab.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(25));
            Delay.Duration(1000, false);
            
            saamMessageDisappears();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.SomeList' at 44;35.", repo.ResultsAnalysis.SomeListInfo, new RecordItemIndex(27));
            repo.ResultsAnalysis.SomeList.Click("44;35");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(28));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.SaveContainer' at Center.", repo.ResultsAnalysis.SaveContainerInfo, new RecordItemIndex(29));
            repo.ResultsAnalysis.SaveContainer.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResultsAnalysis.SaveButton' at Center.", repo.ResultsAnalysis.SaveButtonInfo, new RecordItemIndex(30));
            repo.ResultsAnalysis.SaveButton.Click();
            Delay.Milliseconds(200);
            
            checkTemplateDocs("antibody-titers");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
