///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace MyAssays.Wizard.RanorexTests
{
    public partial class VersionIsNotCompatibleFPManager
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void waitForImport()
        {
        	Report.Log(ReportLevel.Info, "Delay", String.Format("Waiting for {0}s.", HelperConstants.WAIT_FOR_IMPORT));
        	Delay.Seconds(HelperConstants.WAIT_FOR_IMPORT);
        }

        public void renameAssembly(bool invert)
        {
        	RenameFPAssembly.RenameFile(assemblyName, extention, invert);
        }

        public void checkMessage(Adapter adapter, string expectedStr)
        {
        	var message = adapter.Children;
        	string actualMessage = "";
        	
        	foreach(Unknown element in message  )
        	{
        		actualMessage += element.Element.GetAttributeValueText("Text");
        		actualMessage += element.Element.GetAttributeValueText("NavigateUri");
        	}
        	Report.Info("Actual message: " + actualMessage);
        	Report.Info("Expected message: " + expectedStr);
        	Validate.AreEqual(actualMessage, expectedStr, "Message corresponds to expected. ");

        }

    }
}