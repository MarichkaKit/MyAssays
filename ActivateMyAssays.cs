///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssays.Wizard.RanorexTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ActivateMyAssays recording.
    /// </summary>
    [TestModule("2c334183-517c-4c55-b433-94d2b62f31a0", ModuleType.Recording, 1)]
    public partial class ActivateMyAssays : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssays_Wizard_RanorexTestsRepository repository.
        /// </summary>
        public static MyAssays_Wizard_RanorexTestsRepository repo = MyAssays_Wizard_RanorexTestsRepository.Instance;

        static ActivateMyAssays instance = new ActivateMyAssays();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ActivateMyAssays()
        {
            emailName = "RanorexItest_alina_1@myassays.com";
            serialCode = "SGFTE-6QL04-R45SP-1UVXF-TT2P1-MUVCC-WZZZZ";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ActivateMyAssays Instance
        {
            get { return instance; }
        }

#region Variables

        string _emailName;

        /// <summary>
        /// Gets or sets the value of variable emailName.
        /// </summary>
        [TestVariable("35c117d3-4b9c-4164-8ca8-51e1474bf702")]
        public string emailName
        {
            get { return _emailName; }
            set { _emailName = value; }
        }

        string _serialCode;

        /// <summary>
        /// Gets or sets the value of variable serialCode.
        /// </summary>
        [TestVariable("bb111cd1-62bd-401b-bbcb-8932f5aea055")]
        public string serialCode
        {
            get { return _serialCode; }
            set { _serialCode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            RunMyAssays();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 12s.", new RecordItemIndex(1));
            Delay.Duration(12000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysDesktopLicenseActivationDeactivation'.", repo.MyAssaysDesktopLicenseActivationDeactivation.SelfInfo, new RecordItemIndex(2));
            Validate.Exists(repo.MyAssaysDesktopLicenseActivationDeactivation.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.Next'.", repo.MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.NextInfo, new RecordItemIndex(3));
            Validate.Exists(repo.MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.NextInfo);
            Delay.Milliseconds(0);
            
            Mouse_Click_Next();
            Delay.Milliseconds(0);
            
            ValidateLicensing();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(6));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'You have successfully activated the application.') on item 'MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.YouHaveSuccessfullyActivatedTheAppl'.", repo.MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.YouHaveSuccessfullyActivatedTheApplInfo, new RecordItemIndex(8));
            Validate.Attribute(repo.MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.YouHaveSuccessfullyActivatedTheApplInfo, "Text", new Regex(Regex.Escape("You have successfully activated the application.")));
            Delay.Milliseconds(100);
            
            Activate("ef719151-b3ee-4049-beea-4f173980336f", "8JSF7-6TGGH-R45SU-XD7JP-JTDC5-6852R-9ZZZZ", "devteam@myassays.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.Close'.", repo.MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.CloseInfo, new RecordItemIndex(10));
            Validate.Exists(repo.MyAssaysDesktopLicenseActivationDeactivation.SomeContainer4.CloseInfo);
            Delay.Milliseconds(0);
            
            Mouse_Click_Close();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(12));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysExplorer'.", repo.MyAssaysExplorer.SelfInfo, new RecordItemIndex(13));
            Validate.Exists(repo.MyAssaysExplorer.SelfInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysExplorer.Ribbon' at 7;30.", repo.MyAssaysExplorer.RibbonInfo, new RecordItemIndex(14));
            repo.MyAssaysExplorer.Ribbon.Click("7;30");
            Delay.Milliseconds(200);
            
            AddVersionToLog();
            Delay.Milliseconds(0);
            
            Activate("ef719151-b3ee-4049-beea-4f173980336f", "8JSF7-6TGGH-R45SU-XD7JP-JTDC5-6852R-9ZZZZ", "devteam@myassays.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysExplorer.CloseButton' at 11;1.", repo.MyAssaysExplorer.CloseButtonInfo, new RecordItemIndex(17));
            repo.MyAssaysExplorer.CloseButton.Click("11;1");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
