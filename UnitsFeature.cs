///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssays.Wizard.RanorexTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UnitsFeature recording.
    /// </summary>
    [TestModule("29c2bb7b-d693-499c-bb76-8c154f5ff8b4", ModuleType.Recording, 1)]
    public partial class UnitsFeature : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssays_Wizard_RanorexTestsRepository repository.
        /// </summary>
        public static MyAssays_Wizard_RanorexTestsRepository repo = MyAssays_Wizard_RanorexTestsRepository.Instance;

        static UnitsFeature instance = new UnitsFeature();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UnitsFeature()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UnitsFeature Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            openProperties(repo.ProtocolAnalysisDesktop.Transforms);
            Delay.Milliseconds(0);
            
            toWidescreen(ValueConverter.ArgumentFromString<int>("toLeft", "400"));
            Delay.Milliseconds(0);
            
            selectCreatedTransform(ValueConverter.ArgumentFromString<int>("num", "0"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.ConcentrationsDropdown' at Center.", repo.ProtocolAnalysisDesktop.ConcentrationsDropdownInfo, new RecordItemIndex(3));
            repo.ProtocolAnalysisDesktop.ConcentrationsDropdown.Click();
            Delay.Milliseconds(200);
            
            CopyToClipboard("Inputs\\11. list-numeric-data.txt");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopAnalysis.PasteButton' at Center.", repo.MyAssaysDesktopAnalysis.PasteButtonInfo, new RecordItemIndex(5));
            repo.MyAssaysDesktopAnalysis.PasteButton.Click();
            Delay.Milliseconds(200);
            
            CopyToClipboard("Inputs\\BasicUnits.txt");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButton' at Center.", repo.MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButtonInfo, new RecordItemIndex(7));
            repo.MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(8));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopAnalysis.Grid.PasteUnitsButton' at Center.", repo.MyAssaysDesktopAnalysis.Grid.PasteUnitsButtonInfo, new RecordItemIndex(9));
            repo.MyAssaysDesktopAnalysis.Grid.PasteUnitsButton.Click();
            Delay.Milliseconds(200);
            
            try {
                CheckConcentrations("μg/mLng/mLpg/mL");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            CheckPlexIsEditanble();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.ConcentrationsDropdown' at Center.", repo.ProtocolAnalysisDesktop.ConcentrationsDropdownInfo, new RecordItemIndex(12));
            repo.ProtocolAnalysisDesktop.ConcentrationsDropdown.Click();
            Delay.Milliseconds(200);
            
            SavingProtocol();
            Delay.Milliseconds(0);
            
            ValidateUnitsInXML("ConcentrationsPropertiesEditor.assay-protocol", "MCE_DifferentUnits.txt");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.Ribbon' at 13;37.", repo.ProtocolAnalysisDesktop.RibbonInfo, new RecordItemIndex(15));
            repo.ProtocolAnalysisDesktop.Ribbon.Click("13;37");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.ConcentrationsDropdown' at Center.", repo.ProtocolAnalysisDesktop.ConcentrationsDropdownInfo, new RecordItemIndex(16));
            repo.ProtocolAnalysisDesktop.ConcentrationsDropdown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButton' at Center.", repo.MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButtonInfo, new RecordItemIndex(17));
            repo.MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopAnalysis.Grid.SomeElement3' at Center.", repo.MyAssaysDesktopAnalysis.Grid.SomeElement3Info, new RecordItemIndex(18));
            repo.MyAssaysDesktopAnalysis.Grid.SomeElement3.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}'.", new RecordItemIndex(19));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}'.", new RecordItemIndex(20));
            Keyboard.Press("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'test'.", new RecordItemIndex(21));
            Keyboard.Press("test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(22));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(23));
            
            CheckIsUnitsVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButton' at Center.", repo.MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButtonInfo, new RecordItemIndex(25));
            repo.MyAssaysDesktopAnalysis.Grid.EqualUnitsToggleButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(26));
            Delay.Duration(5000, false);
            
            try {
                CheckConcentrations("testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttest");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(27)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.ConcentrationsDropdown' at Center.", repo.ProtocolAnalysisDesktop.ConcentrationsDropdownInfo, new RecordItemIndex(28));
            repo.ProtocolAnalysisDesktop.ConcentrationsDropdown.Click();
            Delay.Milliseconds(200);
            
            SavingProtocol();
            Delay.Milliseconds(0);
            
            ValidateUnitsInXML("ConcentrationsPropertiesEditor.assay-protocol", "MCE_Units.txt");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
