///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssays.Wizard.RanorexTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BestFitMethodInMultiplex recording.
    /// </summary>
    [TestModule("88ffb877-4bdb-4d58-b46a-a105704d7210", ModuleType.Recording, 1)]
    public partial class BestFitMethodInMultiplex : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssays_Wizard_RanorexTestsRepository repository.
        /// </summary>
        public static MyAssays_Wizard_RanorexTestsRepository repo = MyAssays_Wizard_RanorexTestsRepository.Instance;

        static BestFitMethodInMultiplex instance = new BestFitMethodInMultiplex();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BestFitMethodInMultiplex()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BestFitMethodInMultiplex Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            openProperties(repo.ProtocolAnalysisDesktop.Transforms);
            Delay.Milliseconds(0);
            
            toWidescreen(ValueConverter.ArgumentFromString<int>("toLeft", "400"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(2));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.Transforms' at Center.", repo.ProtocolAnalysisDesktop.TransformsInfo, new RecordItemIndex(3));
            repo.ProtocolAnalysisDesktop.Transforms.Click();
            Delay.Milliseconds(200);
            
            selectTransform(ValueConverter.ArgumentFromString<int>("num", "0"));
            Delay.Milliseconds(0);
            
            Set_Value_FitMethod_cb("3");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.FitMethods' at Center.", repo.ProtocolAnalysisDesktop.FitMethodsInfo, new RecordItemIndex(6));
            repo.ProtocolAnalysisDesktop.FitMethods.Click();
            Delay.Milliseconds(200);
            
            CheckLinerRegression("true");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.FitMethods' at Center.", repo.ProtocolAnalysisDesktop.FitMethodsInfo, new RecordItemIndex(8));
            repo.ProtocolAnalysisDesktop.FitMethods.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProtocolAnalysisDesktop.CalculateButton' at Center.", repo.ProtocolAnalysisDesktop.CalculateButtonInfo, new RecordItemIndex(9));
            repo.ProtocolAnalysisDesktop.CalculateButton.Click();
            Delay.Milliseconds(200);
            
            WaitForCalculation();
            Delay.Milliseconds(0);
            
            WaitForCalculation();
            Delay.Milliseconds(0);
            
            WaitForCalculation();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ResultsAnalysis.ResultsTab'.", repo.ResultsAnalysis.ResultsTabInfo, new RecordItemIndex(13));
            Validate.Attribute(repo.ResultsAnalysis.ResultsTabInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
