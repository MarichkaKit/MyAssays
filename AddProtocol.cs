///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyAssays.Wizard.RanorexTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddProtocol recording.
    /// </summary>
    [TestModule("ba30383f-60ed-460a-a1ff-708eee322a7a", ModuleType.Recording, 1)]
    public partial class AddProtocol : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyAssays_Wizard_RanorexTestsRepository repository.
        /// </summary>
        public static MyAssays_Wizard_RanorexTestsRepository repo = MyAssays_Wizard_RanorexTestsRepository.Instance;

        static AddProtocol instance = new AddProtocol();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddProtocol()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddProtocol Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //RunMyAssays();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 20s.", new RecordItemIndex(1));
            //Delay.Duration(20000, false);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysExplorer'.", repo.MyAssaysExplorer.SelfInfo, new RecordItemIndex(2));
            //Validate.Exists(repo.MyAssaysExplorer.SelfInfo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysExplorer.Search_ribbonTextBox'.", repo.MyAssaysExplorer.Search_ribbonTextBoxInfo, new RecordItemIndex(3));
            //Validate.Exists(repo.MyAssaysExplorer.Search_ribbonTextBoxInfo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysExplorer.Search_ribbonTextBox' at Center.", repo.MyAssaysExplorer.Search_ribbonTextBoxInfo, new RecordItemIndex(4));
            //repo.MyAssaysExplorer.Search_ribbonTextBox.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '4pl'.", new RecordItemIndex(5));
            //Keyboard.Press("4pl");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysExplorer.SearchBttn'.", repo.MyAssaysExplorer.SearchBttnInfo, new RecordItemIndex(6));
            //Validate.Exists(repo.MyAssaysExplorer.SearchBttnInfo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'MyAssaysExplorer.SearchBttn'.", repo.MyAssaysExplorer.SearchBttnInfo, new RecordItemIndex(7));
            //Validate.Attribute(repo.MyAssaysExplorer.SearchBttnInfo, "Enabled", "True");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Focusable to 'True' on item 'MyAssaysExplorer.SearchBttn'.", repo.MyAssaysExplorer.SearchBttnInfo, new RecordItemIndex(8));
            //repo.MyAssaysExplorer.SearchBttn.Element.SetAttributeValue("Focusable", "True");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'MyAssaysExplorer.SearchBttn' at Center.", repo.MyAssaysExplorer.SearchBttnInfo, new RecordItemIndex(9));
            //repo.MyAssaysExplorer.SearchBttn.Click(System.Windows.Forms.MouseButtons.Right);
            //Delay.Milliseconds(200);
            
            //Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(10));
            
            //ClickSearchButton();
            //Delay.Milliseconds(0);
            
            //Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(12));
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(13));
            //Delay.Duration(10000, false);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyAssaysExplorer.LayoutRoot.SomeList'.", repo.MyAssaysExplorer.LayoutRoot.SomeListInfo, new RecordItemIndex(14));
            //Validate.Exists(repo.MyAssaysExplorer.LayoutRoot.SomeListInfo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysExplorer.LayoutRoot.SomeList' at 354;0.", repo.MyAssaysExplorer.LayoutRoot.SomeListInfo, new RecordItemIndex(15));
            //repo.MyAssaysExplorer.LayoutRoot.SomeList.Click("354;0");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for item 'MyAssaysExplorer.LayoutRoot.SomeProgressBar' to exist.", repo.MyAssaysExplorer.LayoutRoot.SomeProgressBarInfo, new ActionTimeout(5000), new RecordItemIndex(16));
            repo.MyAssaysExplorer.LayoutRoot.SomeProgressBarInfo.WaitForExists(5000);
            
            WaitDownloading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for item 'MyAssaysExplorer.LayoutRoot.ResultsListView' to exist.", repo.MyAssaysExplorer.LayoutRoot.ResultsListViewInfo, new ActionTimeout(5000), new RecordItemIndex(18));
            repo.MyAssaysExplorer.LayoutRoot.ResultsListViewInfo.WaitForExists(5000);
            
            CheckItems();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(20));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyAssaysExplorer.CloseButton' at 8;0.", repo.MyAssaysExplorer.CloseButtonInfo, new RecordItemIndex(21));
            repo.MyAssaysExplorer.CloseButton.Click("8;0");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
